{namespace OpenId.Templates}

/**
 * @param? errors
 * @param? values
 */
{template .providerDetails}
{call aui.form.fieldGroup}
	{param content}
		{call aui.form.label}
			{param forField: 'name'/}
			{param isRequired: true/}
			{param content: 'Name'/}
		{/call}
		{call aui.form.input}
			{param id: 'name'/}
			{param type:'text'/}
			{param value: $values.name/}
		{/call}
		{if $errors.name}
			{call aui.form.fieldError}
				{param message: $errors.name/}
			{/call}
		{/if}
	{/param}
{/call}
{call aui.form.fieldGroup}
	{param content}
		{call aui.form.label}
			{param forField: 'endpointUrl'/}
			{param isRequired: true/}
			{param content: 'Provider URL'/}
		{/call}
		{call aui.form.input}
			{param id: 'endpointUrl'/}
			{param type:'text'/}
			{param value: $values.endpointUrl/}
		{/call}
		{if $errors.endpointUrl}
			{call aui.form.fieldError}
				{param message: $errors.endpointUrl/}
			{/call}
		{/if}
	{/param}
{/call}
{call aui.form.fieldGroup}
	{param content}
		{call aui.form.label}
			{param forField: 'extensionNamespace'/}
			{param content: 'Alias'/}
		{/call}
		{call aui.form.input}
			{param id: 'extensionNamespace'/}
			{param type:'text'/}
			{param value: $values.extensionNamespace/}
		{/call}
		{if $errors.extensionNamespace}
			{call aui.form.fieldError}
				{param message: $errors.extensionNamespace/}
			{/call}
		{/if}
	{/param}
{/call}
{/template}

/**
 * @param currentUrl
 * @param? errors
 * @param? values
 */
{template .addProvider}
{call aui.page.document}
    {param windowTitle: 'Add OpenID Provider'/}
    {param headContent}
        <meta name="decorator" content="admin"/>
    {/param}
    {param content}
        <div id="openid">
        	{call aui.page.pageHeader}
				{param content}
					{call aui.page.pageHeaderMain}
						{param content}
							<h2>Add OpenID Provider</h2>
						{/param}
					{/call}
				{/param}
			{/call}
            {call aui.form.form}
                {param action}{$currentUrl}?op=add{/param}
                {param id: 'addProvider'/}
                {param content}
                    {call aui.form.fieldset}
                        {param legendContent: 'Add Provider'/}
                        {param content}
							{call .providerDetails}
								{param errors: $errors/}
								{param values: $values/}
							{/call}
                        {/param}
                    {/call}

                    {call aui.form.buttons}
                        {param content}
                            {call aui.form.submit}
                                {param text: 'Add Provider'/}
                                {param id: 'add'/}
                            {/call}
                            {call aui.form.linkButton}
                                {param text: 'Cancel'/}
                                {param id: 'cancel'/}
                                {param url}{$currentUrl}{/param}
                            {/call}
                        {/param}
                    {/call}
                {/param}
            {/call}
        </div>
    {/param}
{/call}
{/template}

/**
 * @param currentUrl
 * @param pid
 * @param name
 */
{template .deleteProvider}
{call aui.page.document}
    {param windowTitle}Delete OpenID: {$name}{/param}
    {param headContent}
        <meta name="decorator" content="admin"/>
    {/param}
    {param content}
        <div id="openid">
        	{call aui.page.pageHeader}
				{param content}
					{call aui.page.pageHeaderMain}
						{param content}
							<h2>Delete OpenID: {$name}</h2>
						{/param}
					{/call}
				{/param}
			{/call}

			{call aui.form.form}
				{param action}{$currentUrl}?op=delete&pid={$pid}&confirm{/param}
				{param isTopLabels: true/}
				{param content}
					{call aui.message.warning}
						{param content}
							You are about to delete provider '{$name}'. This action cannot be undone.
						{/param}
					{/call}

					{call aui.form.buttons}
						{param alignment: 'form-footer'/}
						{param content}
							{call aui.form.submit}
								{param text: 'Delete'/}
								{param id: 'delete'/}
							{/call}
							{call aui.form.linkButton}
								{param text: 'Cancel'/}
								{param id: 'cancel'/}
								{param url}{$currentUrl}{/param}
							{/call}
						{/param}
					{/call}
				{/param}
			{/call}
        </div>
    {/param}
{/call}
{/template}

/**
 * @param currentUrl
 * @param pid
 * @param? errors
 * @param? values
 */
{template .editProvider}
{call aui.page.document}
    {param windowTitle: 'Edit OpenID Provider'/}
    {param headContent}
        <meta name="decorator" content="admin"/>
    {/param}
    {param content}
        <div id="openid">
        	{call aui.page.pageHeader}
				{param content}
					{call aui.page.pageHeaderMain}
						{param content}
							<h2>Edit OpenID Provider</h2>
						{/param}
					{/call}
				{/param}
			{/call}
            {call aui.form.form}
                {param action}{$currentUrl}?op=add&pid={$pid}{/param}
                {param id: 'editProvider'/}
                {param content}
                    {call aui.form.fieldset}
                        {param legendContent: 'Edit Provider'/}
                        {param content}
							{call .providerDetails}
								{param errors: $errors/}
								{param values: $values/}
							{/call}
                        {/param}
                    {/call}

                    {call aui.form.buttons}
                        {param content}
                            {call aui.form.submit}
                                {param text: 'Edit Provider'/}
                                {param id: 'edit'/}
                            {/call}
                            {call aui.form.linkButton}
                                {param text: 'Cancel'/}
                                {param id: 'cancel'/}
                                {param url}{$currentUrl}{/param}
                            {/call}
                        {/param}
                    {/call}
                {/param}
            {/call}
        </div>
    {/param}
{/call}
{/template}

/**
 * @param providers list of providers
 * @param currentUrl current URL
 */
{template .providers}
{call aui.page.document}
    {param windowTitle: 'OpenID Providers'/}
    {param headContent}
        <meta name="decorator" content="admin"/>
    {/param}
    {param content}
        <div id="openid" class="list-providers">
            {call aui.page.pageHeader}
                {param content}
                    {call aui.page.pageHeaderMain}
                        {param content}
                            <h2>OpenID Providers</h2>
                            <p class="description">The table below shows the OpenID providers currently configured in JIRA.</p>
                        {/param}
                    {/call}
                {/param}
            {/call}

            {call aui.table}
                {param theadContent}
                    <th>Name</th>
                    <th>Endpoint URL</th>
                    <th>Alias</th>
                    <th>Operations</th>
                {/param}
                {param content}
                    {foreach $provider in $providers}
                        <tr{if not $provider.enabled} class="disabled"{/if}>
                            <td>{$provider.name}</td>
                            <td>{$provider.endpointUrl}</td>
                            <td>{$provider.extensionNamespace}</td>
                            <td data-cell-type="operations">
                                <ul class="operations-list">
                                    {if $provider.enabled}
                                        <li><a href="{$currentUrl}?op=disable&pid={$provider.id}">Disable</a></li>
                                    {else}
                                        <li><a href="{$currentUrl}?op=enable&pid={$provider.id}">Enable</a></li>
                                    {/if}
                                    {if not $provider.internal}
                                        <li><a href="{$currentUrl}?op=edit&pid={$provider.id}">Edit</a></li>
                                        <li><a href="{$currentUrl}?op=delete&pid={$provider.id}">Delete</a></li>
                                    {/if}
                                </ul>
                            </td>
                        </tr>
                    {/foreach}
                {/param}
            {/call}

            {call aui.buttons.button}
                {param id: 'new-provider'/}
                {param text}Add Provider{/param}
                {param tagName: 'a'/}
                {param extraAttributes}href="{$currentUrl}?op=add"{/param}
            {/call}
        </div>
    {/param}
{/call}
{/template}

/**
 * @param baseUrl base URL
 * @param content content
 */
{template .errorWrapper}
{call aui.page.document}
    {param windowTitle: 'OpenID Failed'/}
    {param headContent}
        <meta name="decorator" content="general"/>
    {/param}
    {param pageType: 'focused'/}
    {param content}
        {call aui.page.pagePanel}
            {param content}
                {call aui.page.pagePanelContent}
                    {param content}
                        <h2>OpenID Failed</h2>
                        <div>
                            {$content|noAutoescape}
                        </div>
                        {call aui.buttons.buttons}
                            {param content}
                                {call aui.buttons.button}
                                    {param text: 'Log In'/}
                                    {param type: 'link'/}
                                    {param tagName: 'a'/}
                                    {param extraAttributes}
                                    href="{$baseUrl}/login.jsp"
                                    {/param}
                                {/call}
                            {/param}
                        {/call}
                    {/param}
                {/call}
            {/param}
        {/call}
    {/param}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .error}
{call .errorWrapper}
    {param content}
    There was a problem during authentication. Please try again using different method.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .emptyEmail}
{call .errorWrapper}
    {param content}
    OpenID provider did not return a valid email address for the identity. Cannot proceed. Plase try again using different method.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .noUserMatched}
{call .errorWrapper}
    {param content}
    No existing user was matched. Cannot proceed. Please try again using different method.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .invalidLicense}
{call .errorWrapper}
    {param content}
    No valid license found. Please ask your administrator to configure the plugin.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}