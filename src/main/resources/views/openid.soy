{namespace OpenId.Templates}

/**
 * @param currentUrl
 * @param pid
 * @param name
 */
{template .deleteProvider}
{call aui.page.document}
    {param windowTitle}Delete OpenID: {$name}{/param}
    {param headContent}
        <meta name="decorator" content="admin"/>
    {/param}
    {param content}
        <div class="openid">
        	{call aui.page.pageHeader}
				{param content}
					{call aui.page.pageHeaderMain}
						{param content}
							<h2>Delete OpenID: {$name}</h2>
						{/param}
					{/call}
				{/param}
			{/call}

			{call aui.form.form}
				{param action}{$currentUrl}?op=delete&pid={$pid}&confirm{/param}
				{param isTopLabels: true/}
				{param content}
					{call aui.message.warning}
						{param content}
							You are about to delete provider '{$name}'. This action cannot be undone.
						{/param}
					{/call}

					{call aui.form.buttons}
						{param alignment: 'form-footer'/}
						{param content}
							{call aui.form.submit}
								{param text: 'Delete'/}
								{param id: 'delete'/}
							{/call}
							{call aui.form.linkButton}
								{param text: 'Cancel'/}
								{param id: 'cancel'/}
								{param url}{$currentUrl}{/param}
							{/call}
						{/param}
					{/call}
				{/param}
			{/call}
        </div>
    {/param}
{/call}
{/template}

/**
 * @param currentUrl
 * @param? errors
 * @param? values
 * @param presets
 * @param callbackId
 * @param callbackUrl
 */
{template .editProvider}
{call aui.page.document}
    {param windowTitle: 'Edit Authentication Provider'/}
    {param headContent}
        <meta name="decorator" content="admin"/>
        <meta name="admin.active.section" content="users_groups_configuration/embedded_crowd_section"/>
        <meta name="admin.active.tab" content="openid"/>
    {/param}
    {param content}
        <div class="openid">
        	{call aui.page.pageHeader}
				{param content}
					{call aui.page.pageHeaderMain}
						{param content}
							<h2>Edit Authentication Provider</h2>
						{/param}
					{/call}
				{/param}
			{/call}
            {call aui.form.form}
                {param action: ''/}
                {param id: 'editProvider'/}
                {param content}
                    {call aui.form.fieldset}
                        {param legendContent: 'Edit Provider'/}
                        {param content}
							{call .providerDetails}
								{param errors: $errors/}
								{param values: $values/}
								{param presets: $presets/}
								{param callbackId: $callbackId/}
								{param callbackUrl: $callbackUrl/}
							{/call}
                        {/param}
                    {/call}

                    {call aui.form.buttons}
                        {param content}
                            {call aui.form.submit}
                                {param text: 'Edit Provider'/}
                                {param id: 'saveProvider'/}
                            {/call}
                            {call aui.form.linkButton}
                                {param text: 'Cancel'/}
                                {param id: 'cancel'/}
                                {param url}{$currentUrl}{/param}
                            {/call}
                        {/param}
                    {/call}
                {/param}
            {/call}
        </div>
    {/param}
{/call}
{/template}

/**
 * @param baseUrl base URL
 * @param content content
 */
{template .errorWrapper}
{call aui.page.document}
    {param windowTitle: 'OpenID Failed'/}
    {param headContent}
        <meta name="decorator" content="general"/>
    {/param}
    {param extraClasses: 'openid error'/}
    {param pageType: 'focused'/}
    {param content}
        {call aui.page.pagePanel}
            {param content}
                {call aui.page.pagePanelContent}
                    {param content}
                        <h2>OpenID Failed</h2>
                        <div class="error-message">
                            {$content|noAutoescape}
                        </div>
                        {call aui.buttons.buttons}
                            {param content}
                                {call aui.buttons.button}
                                    {param text: 'Log In'/}
                                    {param type: 'link'/}
                                    {param tagName: 'a'/}
                                    {param extraAttributes}
                                    href="{$baseUrl}/login.jsp"
                                    {/param}
                                {/call}
                            {/param}
                        {/call}
                    {/param}
                {/call}
            {/param}
        {/call}
    {/param}
{/call}
{/template}

/**
 * @param baseUrl base URL
 * @param? sslError in case it's SSL mis-configuration
 */
{template .error}
{call .errorWrapper}
    {param content}

        There was a problem during authentication.&nbsp;

        {if $sslError}
            SSL connection failed. Please refer to logs for details and <a href="https://confluence.atlassian.com/display/JIRA/Connecting+to+SSL+services">check    how to set up SSL connections</a>.
        {else}
            Please refer to logs for an additional info.
        {/if}

    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 * @param providerName name of the provider
 */
{template .invalidState}
{call .errorWrapper}
    {param content}
        Response from {$providerName} didn't match the state saved in the session. Either JIRA server was restarted or your session was renewed.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 * @param providerName name of the provider
 */
{template .invalidClient}
{call .errorWrapper}
    {param content}
        {$providerName} returned 'invalid_client' which suggests an invalid configuration, please check if Client ID and Client Secret match with those offered by {$providerName}.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .emptyEmail}
{call .errorWrapper}
    {param content}
    OpenID provider did not return a valid email address for the identity. Cannot proceed. Please try again using different method.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .domainMismatch}
{call .errorWrapper}
    {param content}
    Your email address is not on a list of allowed domains. Please use a different account to log in.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .noUserMatched}
{call .errorWrapper}
    {param content}
    No existing user was matched. Cannot proceed. Please try again using different method.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}

/**
 * @param baseUrl base URL
 */
{template .invalidLicense}
{call .errorWrapper}
    {param content}
    No valid license found. Please ask your administrator to configure the plugin.
    {/param}
    {param baseUrl: $baseUrl/}
{/call}
{/template}